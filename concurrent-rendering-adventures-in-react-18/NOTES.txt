Concurrent Rendering Adventures in React 18
--------------------------------------------

<Suspense />
Allows to "suspend" rendering a component whenever it has to wait for something.

The fallback component will be redered

SWR(stale-while-revalidate)
is a React Hooks library for data fetching. SWR first returns the data from cache (stale), then sends the request (revalidate), and finally comes with the up-to-date data again.


If Suspense resourse fails tp load an error is theown, catch the error using an ErrorBoundary
Error boundaries can be nested.

Suspense components can be nested.

Multiple suspense boundaries can suspend in parallel
----------------------------------------------------

New Hooks:

*useDefferredValue.- Returns a deferred version of the value that may lag behind
*useTransition.- Avoid undesirable states when waiting for content| (needs to be used ina functional component, one additional render with isPending)
*useSyncExternalStore.- Enables React components to safely and efficiently read from mutable external source in Concurrent Mode
*useId.- Can be used to generate unique ID's in an SSR-safe way

---------------------------------------------------------

<SuspenseList /> will let you control how multiple <Suspense /> components render their fallback
